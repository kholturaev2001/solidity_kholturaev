{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405260ff6000806101000a81548160ff021916908360ff16021790555034801561002b57600080fd5b5060ff8061003a6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806345964e9e1460375780634f2be91f146051575b600080fd5b603d6059565b6040516048919060a3565b60405180910390f35b6057606a565b005b60008054906101000a900460ff1681565b600160008054906101000a900460ff16016000806101000a81548160ff021916908360ff160217905550565b609d8160bc565b82525050565b600060208201905060b660008301846096565b92915050565b600060ff8216905091905056fea2646970667358221220b256d7bef565843be2b65a3f4248805e84430d7caf4ddf2b2cc78ad81d21fbf864736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF DUP1 PUSH2 0x3A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45964E9E EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9D DUP2 PUSH1 0xBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 JUMP 0xD7 0xBE CREATE2 PUSH6 0x843BE2B65A3F TIMESTAMP 0x48 DUP1 0x5E DUP5 NUMBER 0xD PUSH29 0xAF4DDF2B2CC78AD81D21FBF864736F6C63430008000033000000000000 ",
			"sourceMap": "58:176:0:-:0;;;113:3;88:28;;;;;;;;;;;;;;;;;;;;58:176;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:434:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "68:51:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "85:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "106:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "90:15:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "90:22:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "78:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:35:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "78:35:1"
										}
									]
								},
								"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "56:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "63:3:1",
										"type": ""
									}
								],
								"src": "7:112:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "219:120:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "229:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "241:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "252:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "237:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "237:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "229:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "305:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "318:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "329:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "314:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "314:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
													"nodeType": "YulIdentifier",
													"src": "265:39:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "265:67:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "265:67:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "191:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "203:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "214:4:1",
										"type": ""
									}
								],
								"src": "125:214:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "388:43:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "398:27:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "413:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "420:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "409:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "409:16:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "398:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "370:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "380:7:1",
										"type": ""
									}
								],
								"src": "345:86:1"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806345964e9e1460375780634f2be91f146051575b600080fd5b603d6059565b6040516048919060a3565b60405180910390f35b6057606a565b005b60008054906101000a900460ff1681565b600160008054906101000a900460ff16016000806101000a81548160ff021916908360ff160217905550565b609d8160bc565b82525050565b600060208201905060b660008301846096565b92915050565b600060ff8216905091905056fea2646970667358221220b256d7bef565843be2b65a3f4248805e84430d7caf4ddf2b2cc78ad81d21fbf864736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45964E9E EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9D DUP2 PUSH1 0xBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 JUMP 0xD7 0xBE CREATE2 PUSH6 0x843BE2B65A3F TIMESTAMP 0x48 DUP1 0x5E DUP5 NUMBER 0xD PUSH29 0xAF4DDF2B2CC78AD81D21FBF864736F6C63430008000033000000000000 ",
			"sourceMap": "58:176:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;134:98;;;:::i;:::-;;88:28;;;;;;;;;;;;:::o;134:98::-;214:1;202:9;;;;;;;;;;:13;190:9;;:25;;;;;;;;;;;;;;;;;;134:98::o;7:112:1:-;90:22;106:5;90:22;:::i;:::-;85:3;78:35;68:51;;:::o;125:214::-;;252:2;241:9;237:18;229:26;;265:67;329:1;318:9;314:17;305:6;265:67;:::i;:::-;219:120;;;;:::o;345:86::-;;420:4;413:5;409:16;398:27;;388:43;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "51000",
				"executionCost": "20966",
				"totalCost": "71966"
			},
			"external": {
				"add()": "21850",
				"bigNumber()": "1146"
			}
		},
		"methodIdentifiers": {
			"add()": "4f2be91f",
			"bigNumber()": "45964e9e"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "add",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "bigNumber",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}